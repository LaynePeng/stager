// This file was generated by counterfeiter
package fakes

import (
	"sync"

	"github.com/cloudfoundry-incubator/stager/cc_client"
	"github.com/pivotal-golang/lager"
)

type FakeCcClient struct {
	StagingCompleteStub        func(payload []byte, logger lager.Logger) error
	stagingCompleteMutex       sync.RWMutex
	stagingCompleteArgsForCall []struct {
		payload []byte
		logger  lager.Logger
	}
	stagingCompleteReturns struct {
		result1 error
	}
}

func (fake *FakeCcClient) StagingComplete(payload []byte, logger lager.Logger) error {
	fake.stagingCompleteMutex.Lock()
	fake.stagingCompleteArgsForCall = append(fake.stagingCompleteArgsForCall, struct {
		payload []byte
		logger  lager.Logger
	}{payload, logger})
	fake.stagingCompleteMutex.Unlock()
	if fake.StagingCompleteStub != nil {
		return fake.StagingCompleteStub(payload, logger)
	} else {
		return fake.stagingCompleteReturns.result1
	}
}

func (fake *FakeCcClient) StagingCompleteCallCount() int {
	fake.stagingCompleteMutex.RLock()
	defer fake.stagingCompleteMutex.RUnlock()
	return len(fake.stagingCompleteArgsForCall)
}

func (fake *FakeCcClient) StagingCompleteArgsForCall(i int) ([]byte, lager.Logger) {
	fake.stagingCompleteMutex.RLock()
	defer fake.stagingCompleteMutex.RUnlock()
	return fake.stagingCompleteArgsForCall[i].payload, fake.stagingCompleteArgsForCall[i].logger
}

func (fake *FakeCcClient) StagingCompleteReturns(result1 error) {
	fake.StagingCompleteStub = nil
	fake.stagingCompleteReturns = struct {
		result1 error
	}{result1}
}

var _ cc_client.CcClient = new(FakeCcClient)
